- name: Install nextcloud dependencies
  become: yes
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - apache2
    - libapache2-mod-php
    - php-gd
    - php-json
    - php-mysql
    - php-curl
    - php-mbstring
    - php-intl
    - php-imagick
    - php-xml
    - php-zip
    - php-bcmath
    - php-gmp
    - php-bz2
    - libmagickcore-6.q16-6-extra
  notify:
    - restart apache

- name: PHP configuration
  become: yes
  copy:
    src: nextcloud-php.ini
    dest: /etc/php/{{ php_version }}/apache2/conf.d/50-nextcloud.ini
  notify:
    - restart apache

- name: Make nextcloud data directory
  become: yes
  file:
    path: /srv/nextcloud
    state: directory
    owner: www-data
    group: www-data

- name: Mount NFS
  become: yes
  mount:
    fstype: nfs
    src: "10.80.0.1:/srv/nextcloud"
    path: /srv/nextcloud
    state: mounted

- name: Get is nextcloud downloaded
  stat:
    path: /var/www/nextcloud
  register: nextcloud_dir_stat

- name: Download nextcloud
  get_url:
    url: "https://download.nextcloud.com/server/releases/nextcloud-{{ nextcloud_version }}.tar.bz2"
    checksum: "{{ tar_bz_checksum }}"
    dest: /tmp/
  when: not nextcloud_dir_stat.stat.exists
  register: nextcloud_tar

- name: Install nextcloud
  become: yes
  unarchive:
    src: "{{ nextcloud_tar.dest }}"
    remote_src: yes
    creates: /var/www/nextcloud
    dest: /var/www/
    group: www-data
    owner: www-data
  when: nextcloud_tar is not skipped

- name: Enable Apache modules for nextcloud
  become: yes
  apache2_module:
    state: present
    name: "{{ item }}"
  loop:
    - rewrite
    - headers
    - env
    - dir
    - mime
    - ssl
  notify:
    - restart apache

- name: Configure nextcloud apache
  become: yes
  copy:
    src: nextcloud.conf
    dest: /etc/apache2/sites-available/nextcloud.conf
  notify:
    - restart apache

- name: Enable nextcloud
  become: yes
  command: a2ensite nextcloud
  args:
    creates: /etc/apache2/sites-enabled/nextcloud.conf
  notify:
    - restart apache

- name: Get nextcloud status
  become: yes
  become_user: www-data
  command: php /var/www/nextcloud/occ status --no-warnings --output=json
  register: nextcloud_status
  when: install_firstrun

- name: First-time Nextcloud installation
  become: yes
  become_user: www-data
  command: >
      php occ maintenance:install
      --database mysql
      --database-name {{ db.nextcloud.name|quote }}
      --database-host {{ db.nextcloud.host|quote }}
      --database-port {{ db.nextcloud.port|quote }}
      --database-user {{ db.nextcloud.user|quote }}
      --database-pass {{ db.nextcloud.pass|quote }}
      --admin-user simon
      --admin-pass changeme
      --data-dir /srv/nextcloud
      --no-interaction
  args:
    chdir: /var/www/nextcloud
  when: nextcloud_status.changed and not (nextcloud_status.stdout | from_json).installed

- name: Get nextcloud config
  become: yes
  become_user: www-data
  command: php /var/www/nextcloud/occ config:list --private
  changed_when: False
  register: nextcloud_config

- name: Nextcloud config
  include_tasks: config.yml
  loop:
    - { name: mysql.utf8mb4, type: boolean, value: true }
    - { name: htaccess.RewriteBase, value: / }
    - { name: default_locale, value: en_GB }
    - { name: default_phone_region, value: GB }
    - { name: dbname, value: "{{ db.nextcloud.name }}" }
    - { name: dbhost, value: "{{ db.nextcloud.host }}" }
    - { name: dbport, value: "{{ db.nextcloud.port }}" }
    - { name: dbuser, value: "{{ db.nextcloud.user }}" }
    - { name: dbpassword, value: "{{ db.nextcloud.pass }}" }
  loop_control:
    loop_var: config

- name: trusted_domains config
  include_tasks: config_array.yml
  vars:
    name: trusted_domains
    value: [localhost, nextcloud.simon816.com]

- name: Nextcloud setup
  become: yes
  become_user: www-data
  shell: |
      php /var/www/nextcloud/occ maintenance:repair
      php /var/www/nextcloud/occ db:convert-filecache-bigint --no-interaction
      php /var/www/nextcloud/occ maintenance:update:htaccess
  when: nextcloud_status.changed and not (nextcloud_status.stdout | from_json).installed

- name: Ensure Nextcloud cron
  become: yes
  cron:
    minute: "*/5"
    name: nextcloud_cron
    user: www-data
    job: php -f /var/www/nextcloud/cron.php

